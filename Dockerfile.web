# Dockerfile for Awooga runtime (web)

# A separate stage is inserted here by the build script
#__BASE__

# ***
# Run time environment
# ***
FROM alpine:3.8 AS runtime

# Install software
RUN apk update
RUN apk add php-apache2
# Requirements for the PHP runtime
# Debug Toolbar needs 'json'
# Symfony\\Polyfill\\Mbstring needs 'iconv'
RUN apk add php-session php-pdo_mysql php-json php-iconv

# Add dumb init to improve sig handling
COPY --from=base /usr/local/bin/dumb-init /usr/local/bin/dumb-init

WORKDIR /var/www/localhost/htdocs

# Prep Apache
RUN mkdir -p /run/apache2
RUN echo "ServerName localhost" > /etc/apache2/conf.d/server-name.conf
COPY build/apache/rewrite.conf /etc/apache2/conf.d/rewrite.conf
# Change the docroot
RUN sed -i \
    -e 's/\/var\/www\/localhost\/htdocs/\/var\/www\/localhost\/htdocs\/web/g' \
    /etc/apache2/httpd.conf

# Copy source files from the filing system
COPY src src
COPY web web
COPY --from=base /tmp/project/bower_components bower_components

# Copy Git submodules from "base"
COPY --from=base /tmp/project/modules modules

# Copy Composer dependencies from "base"
COPY --from=base /tmp/project/vendor vendor

# Copy config into place
# @todo This config should be injected in, not trapped in code
COPY config/env-config.php.example config/env-config.php

# @todo Add healthcheck

# Start Apache
EXPOSE 80
COPY bin/container-start.sh /tmp/container-start.sh
ENTRYPOINT ["/usr/local/bin/dumb-init", "--"]
CMD ["sh", "/tmp/container-start.sh"]

# ***
# Test environment
# ***
FROM alpine:3.8 AS test

# @todo Copy PhantomJS

# @todo Copy tests

# @todo Run tests
