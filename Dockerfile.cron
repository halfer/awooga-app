# Dockerfile for Awooga runtime (cron)

# A separate stage is inserted here by the build script
#__BASE__

FROM alpine:3.8 AS runtime

RUN apk update
RUN apk add php-cli git php-ctype php-dom php-pdo_mysql php-json php-iconv

# Fix the version of iconv (e.g. see https://github.com/phpearth/docker-php/issues/3,
# https://github.com/docker-library/php/issues/240)
RUN apk add --no-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing gnu-libiconv
ENV LD_PRELOAD /usr/lib/preloadable_libiconv.so php

# Add dumb init to improve sig handling
COPY --from=base /usr/local/bin/dumb-init /usr/local/bin/dumb-init

WORKDIR /root

# Copy source files from the filing system
COPY console/update-repos.php console/update-repos.php
COPY src src

# Copy Git submodules from "base"
COPY --from=base /tmp/project/modules modules

# Copy Composer dependencies from "base"
COPY --from=base /tmp/project/vendor vendor

# Copy config into place
# @todo This config should be injected in, not trapped in code
COPY config/env-config.php.example config/env-config.php

# @todo Add healthcheck

# Start update script
ENTRYPOINT ["/usr/local/bin/dumb-init", "--"]
CMD ["php", "/root/console/update-repos.php"]
